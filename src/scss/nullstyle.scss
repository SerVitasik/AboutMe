/*Обнуление*/
* {
    padding: 0;
    margin: 0;
    border: 0;
}

*,
*:before,
*:after {
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}

:focus,
:active {
    outline: none;
}

a:focus,
a:active {
    outline: none;
}

nav,
footer,
header,
aside {
    display: block;
}

html,
body {
    height: 100%;
    width: 100%;
    font-size: 100%;
    line-height: 1;
    font-size: 14px;
    -ms-text-size-adjust: 100%;
    -moz-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
}

input,
button,
textarea {
    font-family: inherit;
}

input::-ms-clear {
    display: none;
}

button {
    cursor: pointer;
}

button::-moz-focus-inner {
    padding: 0;
    border: 0;
}

a,
a:visited {
    // color: inherit;
    text-decoration: none;
}

a:hover {
    text-decoration: none;
}

ul li {
    list-style: none;
}

img {
    vertical-align: top;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-size: inherit;
    font-weight: inherit;
}

/*--------------------*/

.ibg {
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    position: relative;

    img {
        display: none;
    }
}

.ibg img {
    width: 0;
    height: 0;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    visibility: hidden;
}

//===============================================================================
// TO %
@function prc($pxOne, $pxTwo) {
    $result: math.div($pxOne, $pxTwo) * 100%;
    @return $result;
}
// TO REM
@function rem($px) {
    $result: math.div($px, 16) + rem;
    @return $result;
}

// TO EM
@function em($px) {
    $result: math.div($px, 16) + em;
    @return $result;
}

//===============================================================================
//Адаптивное свойство
$maxWidth: 1920;
@mixin adaptiveValue($property: null, $startSize: null, $minSize: null, $widthFrom: $maxWidthContainer, $type: null) {
    $addSize: $startSize - Sminsize;
    @if $type==1 {
        //Только если меньше контейнера
        #{$property}: $startSize + px;
        @media (max-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
        }
    } @else if $type==2 {
        //Только если больше контейнера
        #{$property}: $startSize + px;
        @media (min-width: #{SmaxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
        }
    } @else {
        //Всегда
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
}

// .slick-slider {
//     position: relative;

//     .slick-track,
//     .slick-list {}

//     .slick-list {
//         overflow: hidden;
//     }

//     .slick-track {
//         display: flex;
//         align-items: flex-start;
//     }

//     .slick-slide {}

//     .slick-dots {
//         display: flex;
//         justify-content: center;
//         align-items: center;

//         li {
//             button {}

//             &.slick-active {
//                 button {}
//             }
//         }
//     }
// }
